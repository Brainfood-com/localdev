#!/bin/bash

set -e

declare -a docker_networks=(
	localdev_default
	nginx
)

/srv/localdev/scripts/configure_docker_daemons
/srv/localdev/scripts/create_ssl_cert_key registry.local
/srv/localdev/scripts/create_ssl_cert_key registry-mirror.local

/srv/localdev/scripts/create_docker_networks "${docker_networks[@]}"
docker-compose -f /srv/localdev/images/squid/docker-compose.yml build
docker-compose -f /srv/localdev/images/squid/docker-compose.yml up -d

export http_proxy=http://http-proxy:3128

docker-compose -f /srv/localdev/images/nexus3/docker-compose.yml build
docker-compose -f /srv/localdev/images/nexus3/docker-compose.yml up -d

docker-compose -f /srv/localdev/subs/nginx-proxy/docker-compose.yml build
docker-compose -f /srv/localdev/subs/nginx-proxy/docker-compose.yml up -d
docker-compose -p email-hub-dev -f /srv/localdev/subs/email-hub/docker-compose.dev.yml build
docker-compose -p email-hub-dev -f /srv/localdev/subs/email-hub/docker-compose.dev.yml up -d
docker-compose -p email-hub-prod -f /srv/localdev/subs/email-hub/docker-compose.prod.yml build
docker-compose -p email-hub-prod -f /srv/localdev/subs/email-hub/docker-compose.prod.yml up -d

echo "Everything has been built and brought online; localdev is ready."

if [[ $# -eq 0 ]]; then
	set -- sleep infinity
fi
exec "$@"
exit 1
