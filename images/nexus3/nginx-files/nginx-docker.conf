log_format vhost
	'$host $remote_addr - $remote_user [$time_local] '
	'"$request" $status $body_bytes_sent '
	'"$http_referer" "$http_user_agent"'
	;

map $http_x_forwarded_proto $proxy_x_forwarded_proto {
	default	$http_x_forwarded_proto;
	''	$scheme;
}
# If we receive X-Forwarded-Port, pass it through; otherwise, pass along the
# server port the client connected to
map $http_x_forwarded_port $proxy_x_forwarded_port {
	default	$http_x_forwarded_port;
	''	$server_port;
}
# If we receive Upgrade, set Connection to "upgrade"; otherwise, delete any
# Connection header that may have been passed to this server
map $http_upgrade $proxy_connection {
	default	upgrade;
	''	close;
}
# Set appropriate X-Forwarded-Ssl header
map $scheme $proxy_x_forwarded_ssl {
	default	$http_x_forwarded_ssl;
	https	on;
}

proxy_set_header		X-Real-IP $remote_addr;
proxy_set_header		Host $host;
proxy_set_header		X-Forwarded-Server $host;
proxy_set_header		X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header		X-Forwarded-Proto $proxy_x_forwarded_proto;
proxy_set_header		X-Forwarded-Ssl $proxy_x_forwarded_ssl;
proxy_set_header		X-Forwarded-Port $proxy_x_forwarded_port;
proxy_set_header		Connection $proxy_connection;

access_log			/var/log/nginx/access.log vhost;
server_names_hash_bucket_size	128;

server {
	server_name		nexus.local nexus.* maven-mirror;
	listen			80;
	client_max_body_size	0;
	location / {
		proxy_pass	http://nexus:8081/;
	}
}

server {
	server_name		registry-mirror.local docker-registry-mirror.* docker-registry-mirror;
	listen			80;
	client_max_body_size	0;
	location / {
		proxy_pass	http://nexus:8083/;
	}
}

server {
	server_name		registry.local docker-registry.* docker-registry;
	listen			80;
	client_max_body_size	0;
	location / {
		proxy_pass	http://nexus:8082/;
	}
}

